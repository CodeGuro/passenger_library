---
section: install
---
<%
@page_title = "Upgrading #{edition_title} #{integration_mode_name_as_passenger_suffix} through source tarball"
content_for(:sidebar) { render_partial("../sidebar", locals: locals) }

if edition_type == :oss
  tarball_basename = "passenger"
else
  tarball_basename = "passenger-enterprise-server"
end
step = 0
%>

<h1>Upgrading <%= edition_title %> <%= integration_mode_name_as_passenger_suffix %><br>
<small>through source tarball</small></h1>

<p class="lead">This guide teaches you how to upgrade <%= edition_title %> <%= integration_mode_name_as_passenger_suffix %> to the latest version. It assumes that <%= edition_title %> <%= integration_mode_name_as_passenger_suffix %> was installed through a source tarball. Is this not the case? Go back to the <a href=".">upgrade guide index</a>.</p>

**Table of contents**

<ul class="toc-container"><li>Loading...</li></ul>

## Upgrade instructions

<% step += 1 %>
<% if edition_type == :oss %>
  <h3>Step <%= step %>: download and extract latest tarball</h3>

  <p>Download the latest Passenger source tarball.</p>

  <p>
    <a href="https://www.phusionpassenger.com/latest_stable_tarball" class="btn btn-primary">
      <span class="glyphicon glyphicon-download"></span>
      Download tarball
    </a>
  </p>

  <p>
    Extract the tarball to the same directory as where your current Passenger installation is located. For example, if Passenger was located in <code>/opt/passenger-5.0.12</code>, then extract the tarball to <code>/opt</code>. Replace X.X.X with the Passenger version you downloaded.
  </p>

  <pre class="highlight shell"><span class="prompt">$ </span>tar -xzvf passenger-<span class="o">X.X.X</span>.tar.gz -C <span class="o">/opt</span></pre>
<% else %>
  <h3>Step <%= step %>: download latest tarball, upload to server and extract</h3>

  <p>
    Go to the "Files" section in the <a href="https://www.phusionpassenger.com/customers">Customer Area</a> and download the tar.gz file of the latest Passenger Enterprise version. Copy that file to your production server, for example using <code>scp</code>:
  </p>

  <pre class="highlight"><span class="prompt">local-computer$ </span>cd /path-to-your-local-computer-download-folder
<span class="prompt">local-computer$ </span>scp passenger-enterprise-server-<span class="o">X.X.X</span>.tar.gz admin@yourserver.com:</pre>

  <p>(Replace X.X.X with the Passenger Enterprise version)</p>

  <p>
    On your production server, extract the tarball to the same directory as where your current Passenger Enterprise installation is located. For example, if Passenger Enterprise was located in <code>/opt/passenger-enterprise-5.0.12</code>, then extract the tarball to <code>/opt</code>. Replace X.X.X with the Passenger Enterprise version you downloaded.
  </p>
  <pre class="highlight shell"><span class="prompt">production-server$ </span>tar -xzvf passenger-enterprise-server-<span class="o">X.X.X</span>.tar.gz -C <span class="o">/opt</span></pre>

  <div class="alert alert-info" role="alert" style="margin: 4em 0">From this point on, all commands that you run are supposed to be run on the production server, not on your local computer.</div>
<% end %>


<% step += 1 %>
<h3 id="update_path">Step <%= step %>: update Passenger PATH entry</h3>
<p>
  While installing the previous Passenger version, you added its <code>bin</code> directory to PATH, so that your shell can locate the previous Passenger version's commands. You need to update this PATH entry to point to the latest Passenger.
</p>
<p>
  Open your shell's system-wide startup file. If you're using bash, this is usually <code>/etc/bashrc</code> or <code>/etc/bash.bashrc</code>. Inside that file, look for something like this:
</p>
<pre class="highlight shell">PATH=<span class="o">/opt</span>/<%= tarball_basename %>-<span class="o">PREVIOUS-VERSION-NUMBER</span>/bin:$PATH</pre>
<p>
  Replace it with:
</p>
<pre class="highlight shell">PATH=<span class="o">/opt</span>/<%= tarball_basename %>-<span class="o">CURRENT-VERSION-NUMBER</span>/bin:$PATH</pre>
<p>
  When you're done, restart all your shells so that your new PATH takes effect.
</p>
<div class="note">
  Make sure your bashrc is actually included by your bash profile, which might not be the case if you created the user with <code>useradd</code> instead of <code>adduser</code> for example.
</div>


<% if integration_mode_type == :apache %>
  <% step += 1 %>
  <h3>Step <%= step %>: re-run the Passenger Apache module installer</h3>

  <p>
    Re-run the Passenger Apache module installer in order to upgrade the Passenger Apache module to the latest version. Follow the on-screen instructions:
  </p>

  <pre class="highlight"><span class="prompt">$ </span>passenger-install-apache2-module</pre>

  <p>
    When done, don't forget to update the configuration snippet in your Apache config file, as instructed by the installer.
  </p>

  <p>
    Different operating systems and Apache installations have different conventions with regard to where the Apache configuration file is and how it is organized. Please read <a href="<%= url_for '/install/apache/working_with_the_apache_config_file.html' %>">Working with the Apache configuration file</a> if you are not familiar with it. That page is especially of interest for macOS Server &gt;= 10.8 users because the configuration file may be at a surprising location.
  </p>

  <% step += 1 %>
  <h3>Step <%= step %>: restart Apache</h3>

  <p>
    Restart Apache using the following command. Note that you must <strong>stop and start</strong> Apache. Just restarting it or reloading it is not enough.
  </p>

  <pre class="highlight"><span class="prompt">$ </span>sudo apache2ctl stop &amp;&amp;
  sudo apache2ctl start</pre>

  <div class="note">
    On some systems, the command may be <code>apachectl</code> instead of <code>apache2ctl</code>.
  </div>
<% elsif integration_mode_type == :nginx %>
  <% step += 1 %>
  <h3>Step <%= step %>: re-run the Passenger Nginx module installer</h3>

  <p>
    Re-run the Passenger Nginx module installer in order to upgrade Nginx and its Passenger module to the latest version. Follow the on-screen instructions:
  </p>

  <pre class="highlight"><span class="prompt">$ </span>passenger-install-nginx-module</pre>

  <p>
    When done, don't forget to update the configuration snippet in your Nginx config file, as instructed by the installer.
  </p>

  <div class="note">
    <strong>Make sure you preserve the Nginx prefix!</strong>
    <p>
      At some point, you will be asked to provide an Nginx "prefix directory". You were asked the same question the last time you installed Passenger + Nginx through source tarball. Make sure that you enter the same directory this time. It's usually /opt/nginx.
    </p>
  </div>

  <% step += 1 %>
  <h3>Step <%= step %>: restart Nginx</h3>

  <p>
    Restart Nginx using the following command. Note <em>reloading</em> Nginx is not enough; it must really be a restart.
  </p>

  <pre class="highlight"><span class="prompt">$ </span>sudo kill $(cat /opt/nginx/logs/nginx.pid)
<span class="prompt">$ </span>sudo /opt/nginx/sbin/nginx</pre>

  <p>
    Be sure to replace <code>/opt/nginx</code> with the actual Nginx prefix that you installed Nginx to.
  </p>
<% elsif integration_mode_type == :standalone %>
  <% step += 1 %>
  <h3>Step <%= step %>: restart <%= edition_title %> Standalone</h3>

  <p>
    Go to your application directory and restart <%= edition_title %> Standalone, like this:
  </p>

  <pre class="highlight"><span class="prompt">$ </span>cd <span class="o">/var/www/yourapp</span>
<span class="prompt">$ </span>passenger stop;
  passenger start</pre>

  <div class="note">
    <strong>Using sudo?</strong>
    <p>
      Was your previous Passenger Standalone instance run with <code>sudo</code> privileges? Then instead of following the above instructions, follow these instructions involving sudo:
    </p>
    <pre class="highlight"><span class="prompt">$ </span>cd <span class="o">/var/www/yourapp</span>
<span class="prompt">$ </span>sudo passenger stop;
  sudo passenger start</pre>
    <p>
      Of course, if you are an RVM user, be sure to use <code>rvmsudo</code> instead of <code>sudo</code>.
    </p>
  </div>
<% else %>
  <% raise "TODO" %>
<% end %>

<% step += 1 %>
<h3>Step <%= step %>: remove old version</h3>

Remove the previous Passenger version:

<pre class="highlight"><span class="prompt">$ </span>sudo rm -rf <span class="o">/opt</span>/<%= tarball_basename %>-<span class="o">X.X.X</span></pre>

<% step += 1 %>
<h3>Step <%= step %>: validate installation</h3>
<%= render_partial("/install/install/shared/postinstall_check",
      locals: locals.merge(apache_process_name: "apache2")) %>
