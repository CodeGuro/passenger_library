<% if integration_mode_type != :standalone %>
### Why does the first request take a long time?

#### Symptoms

The first request to your application takes more time than usual. Subsequent requests have the normal speed.

#### Cause

Passenger starts your application the first time it is accessed, not during web server startup. Some applications can take several seconds to start. If you're using Ruby on Rails, then needing 10 seconds to start your application is normal. On slow or heavily loaded servers, or in case of large and heavy applications, the startup time may be even longer.

#### Solution

<% if integration_mode_type == :nginx %>
  Use the [passenger_pre_start](<%= url_for "/config/nginx/reference/index.html" %>#passenger_pre_start) configuration option.
<% else %>
  [PassengerPreStart (Apache)](<%= url_for "/config/nginx/reference/index.html" %>#passengerprestart)
<% end %>
<% end %>

### I get "command not found" when running a Passenger command through sudo

#### Symptoms

Passenger commands can be found as a normal user, but not when run through sudo:

<div>
  <pre class="highlight"><span class="prompt">$ </span>passenger-status
<span class="output">...some output, but no "command not found" error...</span>
<span class="prompt">$ </span>passenger-install-apache2-module
<span class="output">...some output, but no "command not found" error...</span>
<span class="prompt">$ </span>sudo passenger-status
<span class="output">sudo: passenger-status: command not found</span>
<span class="prompt">$ </span>sudo passenger-install-apache2-module
<span class="output">sudo: passenger-install-apache2-module: command not found</span></pre>
</div>

#### Cause

The operating system looks up commands using [the PATH environment variable](<%= url_for "/indepth/environment_variables.html#the-path-environment-variable" %>). However, sudo resets all environment variables to a default value, dictated by sudo. If Passenger was installed to a location that is not in the default sudo PATH value, then sudo will not be able to find the Passenger commands.

In addition, if you installed Passenger using a Ruby interpreter that was installed through RVM, then you **must** use [rvmsudo](https://rvm.io/integration/sudo) instead of sudo. As a rule, when you're an RVM user, always use rvmsudo instead of sudo.

#### Solution

Execute the command using its full path. You can use `which` as a normal user to lookup the full path:

<div>
  <pre class="highlight"><span class="prompt">$ </span>which passenger-status
<span class="output">/somewhere/bin/passenger-status</span></pre>

Next, run full path of the command using either sudo or rvmsudo:

<pre class="highlight"><span class="prompt">$ </span>sudo /somewhere/bin/passenger-status

<span class="c"># -OR, if you're using RVM:-</span>

<span class="prompt">$ </span>rvmsudo /somewhere/bin/passenger-status</pre>
</div>

#### Recommended reading

When using sudo, you will probably run into similar "command not found" issues in the future, with components other than Passenger. We **strongly recommend** you to [learn about environment variables](<%= url_for "/indepth/environment_variables.html" %>) so that you know what to do in the future.
