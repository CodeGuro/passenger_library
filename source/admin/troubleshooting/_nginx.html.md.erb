### Upon accessing the web app, Nginx reports a "404 Not Found" error instead of displaying my web app

#### Symptoms

You visit your web app, but instead of seeing your web app, you see a 404 Not Found error page. In addition, you also see a piece of text that the 404 Not Found error page is generated by Nginx.

If you look in the Nginx error log, you see an error message like this:

~~~
2015/07/02 20:14:17 [error] 31746#0: *80 "/app/public/index.html" is not found (2: No such file or directory), client: 127.0.0.1, server: 127.0.0.1, request: "GET / HTTP/1.1", host: "foo.com"
~~~

There are several common causes for this problem.

#### Cause and solution #1

You did not enable Passenger in the corresponding `server` block with [passenger_enabled on](<%= url_for "/config/nginx/reference/index.html" %>#passenger_enabled).

To solve this problem, please specify `passenger_enabled on` in your Nginx configuration file, inside your app's `server` block.

#### Cause and solution #2

If you did enable Passenger with `passenger_enabled on`, then maybe the problem is that you did not configure Nginx to enable the Passenger module. Please check whether your Nginx configuration file contains the [passenger_root](<%= url_for "/config/nginx/reference/index.html" %>#passenger_root) option. If it doesn't, [please add it](<%= url_for "/config/nginx/reference/index.html" %>#how-to-fix-passenger_root).

#### Cause and solution #3

If you did enable Passenger with `passenger_enabled on`, and `passenger_root` is also specified in your Nginx config file, then it is likely that Passenger encountered an error during initialization. If Passenger was not able to initialize, then it will log the error, and then Nginx will behave as if Passenger was never installed in the first place. As a result, Nginx will try to serve static files in your web app's static files directory, fail to do so, then report a 404 Not Found error.

To solve this problem, please open the [Passenger log file](<%= url_for "/admin/nginx/log_file/index.html" %>) and look for any error messages there. The error messages will tell you why Passenger failed to initialize. Please take action accordingly.

#### Cause and solution #4

Make sure Passenger recognizes your application. If [autodetection](<%= url_for "/indepth/app_autodetection/index.html" %>) fails, for example because you are using non-standard filenames, you might have to specify additional options.

<% if language_type == :ruby %>
Note that if you are upgrading from a Passenger version below 5, autodetection requires a `config.ru` to be present, as specified in the [upgrade notes](<%= url_for "/install/migrating/index.html" %>).
<% end %>

### Upon accessing the web app, Nginx reports a "Permission denied" error

#### Symptoms

A typical error message looks like this:

~~~
2013/10/21 17:16:03 [alert] 98687#0: *1 Cannot stat
'/Users/phusion/Sites/rack.test/config.ru': Permission denied (errno=13); This
error means that the Nginx worker process (PID 99064, running as UID 70) does
not have permission to access this file. Please read this page to learn how to
fix this problem:
https://www.phusionpassenger.com/library/admin/nginx/troubleshooting/?a=upon-accessing-the-web-app-nginx-reports-a-permission-denied-error;
Extra info, client: 127.0.0.1, server: www.foo.com, request: "GET / HTTP/1.1",
host: "www.foo.com"
~~~

#### Cause

Passenger tries to access your application directory in order to find out what language it's written in. This access is initiated from inside an Nginx worker process. This error indicates that the Nginx worker process does not have the proper permissions to access your application's root directory.

#### Solution

You need to relax permissions to that the Nginx worker process can access your application directory, by making the directory group- and world-*executable*:

~~~bash
sudo chmod g+x,o+x /Users/phusion/Sites/rack.test
~~~

You *also* need to ensure that all parent directories are also 'executable' by the Nginx process:

~~~bash
sudo chmod g+x,o+x /Users/phusion/Sites
sudo chmod g+x,o+x /Users/phusion
sudo chmod g+x,o+x /Users
~~~

<div class="note">
  <strong>Why 'executable' permission and not 'readable'?</strong>
  <p>
    On Unix, the 'executable' permission on directories dictates whether a process is allowed to <em>access</em> files or subdirectories within that directory. The 'readable' permission dictates whether a process is allowed to see what files are inside the directory, but does not necessarily allow access to them. You can learn more at <a href="http://en.wikipedia.org/wiki/File_system_permissions#Permissions">Wikipedia</a>.
  </p>
</div>
